class는 일종의 설계도 

맴버 변수 설정법
ex)int m변수,int m_변수,int _변수

생성자(constructor)와 소멸자(destructor)
클래스에 소속된 함수들을 멤버 함수라고 함
이 중에서 굉장히 특별한 함수 2종이 있는데 바로 시작과 끝을 알리는 함수들
-시작(탄생) -> 생성자(여러개 존재 가능)
-끝(소멸) -> 소멸자 (오직 1개만)
암시적 생성자
생성자를 명시적으로 만들지 않으면,
아무인자도 받니 않는 기본 생성자가 컴파일러에 의해 자동으로 만들어진다.
-> 그러나 우리가 명시적으로 아무 생성자나 하나 만들면,
자동으로 만들어지던 기본생성자는 더이상 만들어지지 않는다.
//[1] 기본 생성자(인자가 없음)
    Knight()
    {
        cout << "Knight() 기본 생성자 호출" << endl;

        _hp = 100;
        _attack = 10;
        _posX = 0;
        _posY = 0;
    }
    Knight k1;
    //[2] 복사 생성자(자기 자신의 클래스 참조 타입을 인자로 받음)
    //(일반적으로 '똑같은' 데이터를 지닌 객체가 생성되길 기대한다)
    Knight(const Knight& Knight)
    {
        cout << "Knight(Knight) 복사 생성자 호출" << endl;
        _hp = Knight._hp;
        _attack = Knight._attack;
        _posX = Knight._posX;
        _posY = Knight._posY;
    }
    //[3] 기타 생성자
    //이 중에서 인자를 1개만 받는 기타 생성자를
    //타입변환생성자라고 부르기도 함
    Knight(int hp)
    {
        cout << "Knight(int) 기본 생성자 호출" << endl;

        _hp = hp;
        _attack = 10;
        _posX = 0;
        _posY = 0;
    }
    //소멸자
    ~Knight()
    {
        cout << "Knight() 소멸자 호출" << endl;
    }
    명시적 -> 우리가 형변환을 하도록 주문해야함
    암시적 -> 컴파일러가 알아서 형변환을 함
